// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  name String 
  email String
  password String

}

model Zap {
  id String @id @default(uuid())
  triggerId String
  trigger Trigger?
  actions Action[]
  zapRuns ZapRun[]
}

model Trigger {
  id String @id @default(uuid())
  zapId String @unique
  triggerId String
  type TriggerAvailable @relation(fields: [triggerId],references: [id])
  zap Zap @relation(fields: [zapId],references: [id])
}

model Action {
  id String @id @default(uuid())
  zapId String
  actionId String
  zap Zap @relation(fields:[zapId],references:[id])
  type ActionAvailable @relation(fields:[actionId],references:[id])
  sortingOrder Int @default(0)

}

model ActionAvailable {
  id String @id @default(uuid())
  name String
  actions Action[]
}

model TriggerAvailable {
  id String @id @default(uuid())
  name String
  triggers Trigger[]
}

model ZapRun {
  id String @id @default(uuid())
  zapId String
  metadata Json
  zap Zap @relation(fields:[zapId],references:[id])
  zapRunOutBox zapRunOutBox?
  
}

model zapRunOutBox {
  id String @id @default(uuid())
  zapRunId String @unique
  zapId ZapRun @relation(fields:[zapRunId],references:[id])
}